---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { PROJECTS } from "@consts";
---

      <ul class="animate not-prose flex flex-col gap-4 sli">

        <div class="animate font-semibold text-black dark:text-white">
            <span id="motd">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
          </div>
     
        <div class="text-sm">

          <img id="server_icon" class="server-icon" src="" alt="–ò–∫–æ–Ω–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" hidden>
          <p class="dflex"><strong>IP:</strong>             <button
            id="copy-button"
            class="flex items-center rounded border border-black/15 bg-neutral-100 px-2 py-1 text-xs transition-colors duration-300 ease-in-out hover:bg-black/5 hover:text-black focus-visible:bg-black/5 focus-visible:text-black dark:border-white/20 dark:bg-neutral-900 dark:hover:bg-white/5 dark:hover:text-white dark:focus-visible:bg-white/5 dark:focus-visible:text-white"
          >
          <i class='bx bx-copy'></i>&nbsp;<span id="host">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
          </button></p>
          <p><strong>–û–Ω–ª–∞–π–Ω:</strong> <span id="online">–ó–∞–≥—Ä—É–∑–∫–∞...</span></p>
          <p><strong>–í–µ—Ä—Å–∏—è:</strong> <span id="version">–ó–∞–≥—Ä—É–∑–∫–∞...</span></p>



          <p class="klm"><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> <span id="motd">–ó–∞–≥—Ä—É–∑–∫–∞...</span></p>
          <hr>
          <p><strong>–ò–≥—Ä–æ–∫–∏:</strong> <span id="players">–ó–∞–≥—Ä—É–∑–∫–∞...</span></p>
          <div id="players-list"></div>


          <p class="klm"><strong>IP:</strong> <span id="ip_address">–ó–∞–≥—Ä—É–∑–∫–∞...</span>:<span id="srv_record">–ó–∞–≥—Ä—É–∑–∫–∞...</span></p>
      </div>

  <!-- <button
      id="copy-button"
      class="flex items-center rounded border border-black/15 bg-neutral-100 px-2 py-1 text-xs transition-colors duration-300 ease-in-out hover:bg-black/5 hover:text-black focus-visible:bg-black/5 focus-visible:text-black dark:border-white/20 dark:bg-neutral-900 dark:hover:bg-white/5 dark:hover:text-white dark:focus-visible:bg-white/5 dark:focus-visible:text-white"
    >
    <i class='bx bx-copy'></i>&nbsp;<span id="host">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
    </button> -->

    <div id="copy-notification" class="copy-notification">
      <div class="text-sm">üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ! –í –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞</div>
    </div>

    <script>
        document.getElementById('copy-button').addEventListener('click', function() {
            const textToCopy = this.textContent.trim();
            navigator.clipboard.writeText(textToCopy).then(() => {
                const notification = document.getElementById('copy-notification');
                notification.style.display = 'block';
                setTimeout(() => {
                    notification.style.display = 'none';
                }, 800);
            }).catch(err => {
                console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞: ', err);
            });
        });
    </script>







<script>
document.getElementById('copy-buttons').addEventListener('click', function() {
    const textToCopy = this.textContent.trim();
    navigator.clipboard.writeText(textToCopy).then(() => {
        const notification = document.getElementById('copy-notifications');
        notification.style.display = 'block';
        setTimeout(() => {
            notification.style.display = 'none';
        }, 800);
    }).catch(err => {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞: ', err);
    });
});
</script>
<script>
  function fetchServerStatus() {
      fetch('https://api.mcstatus.io/v2/status/java/mc.thefoxxstuff.net')
          .then(response => response.json())
          .then(data => {
              document.getElementById('online').textContent = data.online ? '–î–∞' : '–ù–µ—Ç';
              document.getElementById('version').textContent = data.version.name_raw;
              document.getElementById('host').textContent = data.host;
              document.getElementById('ip_address').textContent = data.ip_address;
              document.getElementById('srv_record').textContent = `${data.srv_record.port}`;
              document.getElementById('motd').textContent = data.motd.clean;
              document.getElementById('players').textContent = `${data.players.online} / ${data.players.max}`;
              if (data.icon) {
                  const serverIcon = document.getElementById('server_icon');
                  serverIcon.src = data.icon;
                  serverIcon.hidden = false;
              }
              const playersList = document.getElementById('players-list');
              playersList.innerHTML = ''; 
              if (data.players.list.length > 0) {
                  data.players.list.forEach(player => {
                      const playerItem = document.createElement('div');
                      playerItem.textContent = player.name_clean; 
                      playersList.appendChild(playerItem);
                  });
              } else {
                  playersList.innerHTML = '<li>–ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω</li>';
              }
          })
          .catch(error => {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
          });
  }
  fetchServerStatus();
  </script>
      </ul>
    </div>

<style>
  .copy-notification {
      background-color: #4caf50;
      color: white;
      padding: 4px 8px;
      border-radius: 5px;
      z-index: 1000;
      display: none;
  }
  .copy-notifications {
      background-color: #4caf50;
      color: white;
      padding: 4px 8px;
      border-radius: 5px;
      z-index: 1000;
      display: none;
  }
  .dflex {
    display: ruby;
  }
  #copy-button {
    margin-left: 2px;
  }
  .sdxl {
  }
  #players-list {
    color: #66ff00;
    text-decoration:underline;
  }
  .klm {
    display: none;
  }
  hr {
    opacity: 12%;
    margin-top: 12px;
    margin-bottom: 12px;
  }
  #server_icon {
    border-radius: 8px;
    margin-bottom: 20px;
  }
  .right {
    float: right;
  }
  .sli {
    margin-bottom: 60px;
  }
</style>